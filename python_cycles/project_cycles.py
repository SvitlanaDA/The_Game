"""Проект з циклами
    Генератор числових шаблонів
Мета: Створити програму, яка генерує різні шаблони за допомогою різних типів циклів.
    Функції:
Шаблони трикутників з чисел
Генерація таблиці множення
Послідовність зворотного відліку
    Фокус реалізації:
Цикли for з range() для фіксованих ітерацій
Вкладені цикли для генерації 2D-шаблонів
Цикли while для послідовностей зворотного відліку
Демонстрація структури керування циклами
    Інтерфейс користувача: 
Інтерфейс на основі меню для вибору типів шаблонів та параметрів.
    Виклики:
Створення різних стилів шаблонів за допомогою циклів
Реалізація вкладених циклів для складних шаблонів
Акуратне форматування виводу"""


print("\nВітаємо Вас у Генераторі числових шаблонів")


while True:  # Створюємо цикл, який буде працювати, поки виконуються умови циклу.
    try:
        # Запит на вибір функції
        check_func = int(input("\nОберіть будь ласка номер функції: \n"
                       "\n1 - Шаблони трикутників з чисел\n"
                       "2 - Генерація таблиці множення\n"
                       "3 - Послідовність зворотного відліку\n"
                       "4 - Вихід\n"
                        "\nВведить обраний номер функції: "))
        
         # Вихід із програми
        if check_func == 4:
            print("\nДякуємо, що скористалися нашим Генератором числових шаблонів! Вихід з системи.")
            break


        # Вивести трикутник з чисел
        if check_func == 1:
            num = int(input("\nВведить число для виведення трикутника чисел: "))

            # Вивести трикутник для обраного числа < 10
            if num < 10:
                for i in range(1, num + 1):
                    print(f" {i}" * i) # Виводимо візерунок з цифр у кількості введених рярків

            # Вивести трикутник для обраного числа >= 10
            if num > 9:
                for i in range(1, num + 1):
                    if i < 10:  # Додатковий трикутник з "0" для чисел < 10
                        print(f" 0{i}" * i )
                    
                    else:
                        print(f" {i}" * i)
        

        # Генерація таблиці множення
        if check_func == 2:
            print("\nГенерація таблиці множення:")

            for i in range(1, 11): # Для кожного числа від 1 до 10 (включно) у рядку
                for j in range(1, 11): # Для кожного числа від 1 до 10 (включно) у стовбцу
                    row = [i * j]  # Створення нового списку перемінних для множин кожної i та j
    
                    for num in row:  # Проходимо по кожному числу у рядку нового списку
                        print(f" {i} * {j} = {num}")  # Виводимо числа множин i та j
    
                print()  # Розрив рядка після завершення кожного внутрішнього циклу


        # Простий зворотний відлік
        if check_func == 3:
            numeric = int(input("\nВведить число для послідовності зворотнього відліку: ")) # Для вводу цілих чисел

            while numeric > 0: # Цикл дійсний поки більше за 0
                print(numeric)
                numeric -= 1  # Зворотній відрахунок
            print("Blast off!")
        

    except ValueError:   # Попередження у разі помилки в ведені данних та повернення на запит ввода
        print("\nВиникла помилка.")